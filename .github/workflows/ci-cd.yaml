name: CI-CD

on:
  push:
    branches:
      - refactor/modernize-sdk

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - uses: actions/cache@v2.1.3
        id: cache-poetry
        with:
          path: ~/.virtualenvs
          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock', 'poetry.toml') }}
      - name: Configure poetry for ci
        run: |
          poetry config virtualenvs.in-project false --local
          poetry config virtualenvs.path ~/.virtualenvs --local
      - name: Install dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          poetry install --no-root
      - name: run tests
        env:
          VALID_TLS_CLIENT_KEY: ${{ secrets.VALID_TLS_CLIENT_KEY }}
          VALID_TLS_CLIENT_SECRET: ${{ secrets.VALID_TLS_CLIENT_SECRET }}
        run: |
          poetry run pytest || poetry install --no-root && poetry run pytest

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: pre-commit/action@v2.0.0
