# -*- coding: utf-8 -*-

"""
    telstramessagingapi.models.send_sms_request

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""


class SendSMSRequest(object):

    """Implementation of the 'SendSMSRequest' model.

    TODO: type model description here.

    Attributes:
        to (string): Phone number (in E.164 format) to send the SMS to. This
            number can be in international format if preceeded by a ‘+’, or in
            national format.
        body (string): The text body of the message. Messages longer than 160
            characters will be counted as multiple messages.
        mfrom (string): Phone number (in E.164 format) the SMS was sent from.
            If not present, the serverice will use the mobile number
            associated with the application, or it be an Alphanumeric address
            of up to 11 characters.
        validity (int): How long the platform should attempt to deliver the
            message for. This period is specified in minutes from the message
        scheduled_delivery (int): How long the platform should wait before
            attempting to send the message - specified in minutes.
        notify_url (string): Contains a URL that will be called once your
            message has been processed. The status may be delivered, expired,
            deleted, etc.
        reply_request (bool): If set to true, the reply message functionality
            will be implemented and the to address will be ignored if present.
            If false or not present, then normal message handling is
            implemented.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "to" : "to",
        "body" : "body",
        "mfrom" : "from",
        "validity" : "validity",
        "scheduled_delivery" : "scheduledDelivery",
        "notify_url" : "notifyURL",
        "reply_request" : "replyRequest"
    }

    def __init__(self,
                 to=None,
                 body=None,
                 mfrom=None,
                 validity=None,
                 scheduled_delivery=None,
                 notify_url=None,
                 reply_request=None):
        """Constructor for the SendSMSRequest class"""

        # Initialize members of the class
        self.to = to
        self.body = body
        self.mfrom = mfrom
        self.validity = validity
        self.scheduled_delivery = scheduled_delivery
        self.notify_url = notify_url
        self.reply_request = reply_request


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        to = dictionary.get("to")
        body = dictionary.get("body")
        mfrom = dictionary.get("from")
        validity = dictionary.get("validity")
        scheduled_delivery = dictionary.get("scheduledDelivery")
        notify_url = dictionary.get("notifyURL")
        reply_request = dictionary.get("replyRequest")

        # Return an object of this model
        return cls(to,
                   body,
                   mfrom,
                   validity,
                   scheduled_delivery,
                   notify_url,
                   reply_request)


