# -*- coding: utf-8 -*-

"""
    telstramessagingapi.models.outbound_poll_response

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""


class OutboundPollResponse(object):

    """Implementation of the 'OutboundPollResponse' model.

    TODO: type model description here.

    Attributes:
        to (string): The phone number (recipient) the message was sent to (in
            E.164 format).
        received_timestamp (string): The date and time when the message was
            recieved by recipient.
        sent_timestamp (string): The date and time when the message was sent.
        delivery_status (StatusEnum): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "to" : "to",
        "received_timestamp" : "receivedTimestamp",
        "sent_timestamp" : "sentTimestamp",
        "delivery_status" : "deliveryStatus"
    }

    def __init__(self,
                 to=None,
                 received_timestamp=None,
                 sent_timestamp=None,
                 delivery_status=None):
        """Constructor for the OutboundPollResponse class"""

        # Initialize members of the class
        self.to = to
        self.received_timestamp = received_timestamp
        self.sent_timestamp = sent_timestamp
        self.delivery_status = delivery_status


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        to = dictionary.get("to")
        received_timestamp = dictionary.get("receivedTimestamp")
        sent_timestamp = dictionary.get("sentTimestamp")
        delivery_status = dictionary.get("deliveryStatus")

        # Return an object of this model
        return cls(to,
                   received_timestamp,
                   sent_timestamp,
                   delivery_status)


