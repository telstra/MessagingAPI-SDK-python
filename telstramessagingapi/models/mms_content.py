# -*- coding: utf-8 -*-

"""
    telstramessagingapi.models.mms_content

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""


class MMSContent(object):

    """Implementation of the 'MMSContent' model.

    TODO: type model description here.

    Attributes:
        mtype (string): The following types are supported audio/amr  audio/aac
            audio/mp3  audio/mpeg3  audio/mpeg  audio/mpg  audio/wav 
            audio/3gpp  audio/mp4  image/gif  image/jpeg  image/jpg  image/png
            image/bmp  video/mpeg4  video/mp4  video/mpeg  video/3gpp 
            video/3gp  video/h263  text/plain  text/x-vCard  text/x-vCalendar
        filename (string): The file name to be associated with the content.
            Some devices will display this file name with a placeholder for
            the content.
        payload (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype" : "type",
        "filename" : "filename",
        "payload" : "payload"
    }

    def __init__(self,
                 mtype=None,
                 filename=None,
                 payload=None):
        """Constructor for the MMSContent class"""

        # Initialize members of the class
        self.mtype = mtype
        self.filename = filename
        self.payload = payload


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mtype = dictionary.get("type")
        filename = dictionary.get("filename")
        payload = dictionary.get("payload")

        # Return an object of this model
        return cls(mtype,
                   filename,
                   payload)


